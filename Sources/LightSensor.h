/*
 * LightSensor.h
 *
 *  Created on: Feb 20, 2019
 *      Author: dave
 */

#ifndef SOURCES_LIGHTSENSOR_H_
#define SOURCES_LIGHTSENSOR_H_

#include <stdint.h>

#define LIGHTSENSOR_I2C_ADDRESS 0x49
#define LIGHTSENSOR_I2C_REGISTER_DEV_ID 0x10
#define LIGHTSENSOR_I2C_REGISTER_DEV_CONFIG_1 0x70
#define LIGHTSENSOR_I2C_REGISTER_DEV_CONFIG_2 0x71
#define LIGHTSENSOR_I2C_REGISTER_DEV_CONFIG_3 0xB0
#define LIGHTSENSOR_I2C_REGISTER_DEV_CONFIG_4 0x88
#define LIGHTSENSOR_I2C_REGISTER_DEV_CONFIG_5 0x9A

#define LIGHTSENSOR_I2C_REGISTER_PWR_MODE 0x73

#define LIGHTSENSOR_I2C_REGISTER_INTR_PIN_CONFIG 0x22
#define LIGHTSENSOR_I2C_REGISTER_INTR_POLL_CLR 0xF8
#define LIGHTSENSOR_I2C_REGISTER_INTR_POLL_EN 0xF9

#define LIGHTSENSOR_I2C_REGISTER_CONFIG_INT_T 0xD9		// Integrationtime (whole Byte)
#define LIGHTSENSOR_I2C_REGISTER_CONFIG_GAIN_IDRV 0xB9	// GAIN: Bit0 + Bit0    |     IDRV: Bit6 + Bit7 (IDRV is the LED Drive Current. Not used)
#define LIGHTSENSOR_I2C_REGISTER_CONFIG_BANK 0xDB		// Photodiode Bank to read (BIT7 1 or 0)
#define LIGHTSENSOR_I2C_REGISTER_CONFIG_WTIME 0xDA		// Waittime (whole Byte)
#define LIGHTSENSOR_I2C_REGISTER_CONFIG_DATA_EN 0xFA

#define LIGHTSENSOR_I2C_REGISTER_AUTO_ZERO 0xBA
#define LIGHTSENSOR_I2C_REGISTER_TMP_H 0xD1			 	//Temperature High Byte
#define LIGHTSENSOR_I2C_REGISTER_TMP_L 0xD2				//Temperature Low Byte
#define LIGHTSENSOR_I2C_REGISTER_TMP_CONFIG 0xD3

#define LIGHTSENSOR_I2C_REGISTER_CHANNEL_N_DATA_L 0xDC
#define LIGHTSENSOR_I2C_REGISTER_CHANNEL_N_DATA_H 0xDD
#define LIGHTSENSOR_I2C_REGISTER_CHANNEL_Y_DATA_L 0xDE
#define LIGHTSENSOR_I2C_REGISTER_CHANNEL_Y_DATA_H 0xDF
#define LIGHTSENSOR_I2C_REGISTER_CHANNEL_Z_DATA_L 0xEC
#define LIGHTSENSOR_I2C_REGISTER_CHANNEL_Z_DATA_H 0xED
#define LIGHTSENSOR_I2C_REGISTER_CHANNEL_X_DATA_L 0xEE
#define LIGHTSENSOR_I2C_REGISTER_CHANNEL_X_DATA_H 0xEF

typedef struct {
	uint16_t xChannelValue;
	uint16_t yChannelValue;
	uint16_t zChannelValue;
	uint16_t nChannelValue;
} LightChannels_t;

void LightSensor_init(void);
uint8_t LightSensor_autoZeroBlocking(void);
uint8_t LightSensor_getChannelValuesBlocking(LightChannels_t* channels);



#endif /* SOURCES_LIGHTSENSOR_H_ */
